<!--GVR Autonomous Launch-->
<launch>


    <node pkg="tf" type="static_transform_publisher" name="baselink_to_basefootprint"
    args="0 0 0 0 0 0 base_link base_footprint 100" />

<node pkg="tf" type="static_transform_publisher" name="baselink_to_velodyne"
   args=" 0.18 0 0.475 -1.57 0 0 base_link velodyne 100" />

     <node pkg="tf" type="static_transform_publisher" name="base_link_to_imu"
    args="0 0 0.475 0 0 0 base_link imu 100" />


     <!-- ========== Load Map Server   ========= -->
  <node pkg="map_server" type="map_server" name="map_server" output="screen"
    args="$(find gvr_navigation)/maps/mapCleanRoom.yaml">
           <param name="frame_id" value="/map"/>
           
</node> 
     <!-- ========== Integrate Pioneer Robot ========== -->

  <!--TODO NEED URDF <include file="$(find p2os_urdf)/launch/pioneer3at_urdf.launch"/>-->

 <!-- TODO Change over to the GVR drive <node pkg="rosaria" type="RosAria" name="RosAria">
    <param name="port" value="/dev/ttyUSB0"/>
    <remap from="/tf" to="/rosariatf"/>
  </node> -->

<!-- launch the GVR bot -->
<node name="gvr_bot_bridge" pkg="gvr_bot" type="run_gvr_bot.sh" output="screen" />

   <!-- ========== Joystick  and Command Velocity Mux ========== -->
    <node pkg="nodelet" type="nodelet" name="mobile_base_nodelet_manager" args="manager"/>

    <node pkg="nodelet" type="nodelet" name="cmd_vel_mux" args="load yocs_cmd_vel_mux/CmdVelMuxNodelet mobile_base_nodelet_manager">
        <param name="yaml_cfg_file" value="$(find gvr_navigation)/param/mux.yaml"/>
        <remap from="cmd_vel_mux/output" to="/gvr_bot/cmd_vel"/>
    </node>

    <include file="$(find gvr_navigation)/launch/xbox360_teleop.launch"/>

   <!-- ========== Start the IMU   ========== -->
    <node pkg="phidgets_imu" type="phidgets_imu_node" name="phidgets_imu">
    </node> 

   <!-- ========== Start the 3d Laser and Laser Scan ========== 
    <include file="$(find velodyne_pointcloud)/launch/DML_VLP16_points.launch">
    </include>  -->
    <!-- Start the 3d LRF -->
    <include file="$(find gvr_navigation)/launch/velodyne32e.launch">
    </include>

    <include file="$(find gvr_navigation)/launch/testLaserMatch.launch"/>
    <!-- Start ekf to make imu into odom 
    <include file="$(find gvr_navigation)/launch/gvr_ekf.launch">
    </include> 
-->

<!-- USE laser scan matcher instead of ekf iot incorporate laser based odometry 
    <include file="$(find gvr_navigation)/launch/gvr_laser_matcher.launch"/>-->

  <!--  ************** Navigation  ***************  -->
  <include file="$(find gvr_navigation)/launch/includes/move_base.launch.xml"/>


     <include file="$(find gvr_navigation)/launch/includes/amcl.launch.xml">
  </include>
 <!-- Start an rviz node with a custom configuration  -->
 <node pkg="rviz" type="rviz" output="screen" name="rviz" args="-d $(find gvr_navigation)/launch/gvr.rviz"/>


</launch>
<!--
rosbag record -O mylaserdata /scan /tf 
-->

